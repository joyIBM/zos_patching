###############################################################################
# Copyright (c) IBM Corporation 2020
###############################################################################

###############################################################################
#
# z/OS CIRATS Installation
#
# Author:
#  Benevides Mamede Jr - October/2020
# Updates:
#  May/2021 - redesigned to simplify use
#  June/2021 - implemented use of roles 
#
###############################################################################
---
- name: Step4 - Customize NEW sysres
  hosts: all
  collections:
    - ibm.ibm_zos_core
  gather_facts: true
  environment: "{{ environment_vars }}"
  connection: ibm.ibm_zos_core.zos_ssh

  tasks:
    - name: start
      include_role:
        name: start

    - name: Get system infos
      include_role:
        name: get_infos
      vars:
        infos: 
          - StaticConfig

    - name: Save PARMLIB
      zos_copy:
        src: "SYS1.PARMLIB"
        dest: "{{ ds_sysouts }}.SAVEPARM"
        force: no
        remote_src: true

    - name: Save PROCLIB
      zos_copy:
        src: "SYS1.PROCLIB"
        dest: "{{ ds_sysouts }}.SAVEPROC"
        force: no
        remote_src: true

    - name: Install procs
      include_role:
        name: install_procs
      vars:
        procnames:
          - getdu
          - getsysinfo
          - getsysvar
          - IPLINFO
          - OMVSCHK

    - name: Get system infos
      include_role:
        name: get_infos
      vars:
        infos:
          - IODEV
          - LOAD
          - OMVS
          - SMFID
          - SYM
          - SYSCLONE
          - SYSNAME
          - SYSP
          - SYSR1
          - TSID
          - SSN

#    - name: Contruct fs table
#      include_role:
#        name: extract_omvs_tree

    - name: JOBS loop
      include_role:
        name: submit_jobs
      vars:
        src: D
        jobnames:
          - BLD2POSA
          - BLD2POSB

    - name: Get ORDERPOS
      shell: dtail -n -100 '{{ ds_sysouts }}(ORDERPOS)'
      register: ddout

    - name: Print results
      debug:
        var: ddout.stdout_lines

    - name: Get DU line
      shell: dgrep ZOS#01T '{{ ds_sysouts }}(DUPOS)'
      register: duline

    - name: Execute getdu REXX
      shell: /tmp/ansible/{{ ansible_user_id|lower }}/cirats/getdu.rexx
             '{{ duline.stdout }}'
      register: duinfo

    - name: Update GSD info
      zos_lineinfile:
        src: '{{ds_cntl }}(BLDINCL)'
        regexp: 'GSD='
        line: "{{ duinfo.stdout }}"

    - name: Submit dynamic jobs
      include_role:
        name: submit_jobs
      vars:
        src: D
        jobnames:
          - BLD2POSD
          - BLD2POSE
          - BLD2POSG
          - BLD2POSH
          - BLD2POSI
          - BLD2POSJ

    - name: Submit static jobs
      include_role:
        name: submit_jobs
      vars:
        src: S
        jobnames: "{{ jobs_static_posGSD }}"
      when: jobs_static_posGSD is iterable

    - name: Finish
      include_role:
        name: finish

    - name: List RCs
      debug:
        var: jobsrc
