/* rexx  __ANSIBLE_ENCODE_EBCDIC__ */
/*-REXX-------- (C) COPYRIGHT IBM CORPORATION 1997 ------------------*/
/* CREATE DATE : 13/05/97               AUTHOR : Trevor Delooze      */
/* SOURCE TYPE : REXX              APPLICATION : BSS Workbench       */
/* SOURCE NAME : SYSCATLG                TITLE : Generate Catalog Cmd*/
/* PARAMETERS  : See Below                                           */
/* DESCRIPTION :                                                     */
/*    This is a general purpose Sysres Cataloging process. It will   */
/*    Generate commands for the following actions.                   */
/*                                                                   */
/*    (1) CAT: Catalog Sysres in Master Catalog                      */
/*    (2) DEL: DELETE catalog entries in Master Catalog not on Sysres*/
/*                                                                   */
/* PARAMETERS                                                        */
/* ----------                                                        */
/* This program is called in batch by JCL generated by O.13 and O.14.*/
/* The parameters passed are Function, VLNUM and some VOLSERs        */
/*   Function - takes value CAT (from O.14) or DEL (from O.13)       */
/*   VLNUM    - number ranging from 1 to 8                           */
/*   VOLSERs  - the VOLSERs of the SYSRES-set volumes                */
/* Examples:                                                         */
/*   ISPSTART CMD(%SYSCATLG CAT 2 MHASY1 MHASY2)                     */
/*   ISPSTART CMD(%SYSCATLG DEL 3 MHASY1 MHASY2 MHASY3)              */
/*                                                                   */
/* NOTES:                                                            */
/* -----                                                             */
/* (1)                                                               */
/* (a) Build Two TABLEs                                              */
/*      - All Master catalog Entries with VOLSER ****** or &SYSRx    */
/*      - All Datasets on the volumes in the SYSRES-set              */
/*                                                                   */
/*     When The Volume table is build and duplicate dataset entries  */
/*     found they are processed as described later.                  */
/* (b) Compare the two tables and build a third table of datasets    */
/*     and volumes which must be actioned (the action is indicated   */
/*     by the Function supplied on the call (see above).             */
/* (c) Process this third table and write appropriate commands       */
/*     to a dataset.                                                 */
/*                                                                   */
/* (2) Processing of duplicates                                      */
/*     When the tables of all datasets on the volumes is being built */
/*     if a duplicate dataset is encountered then IT IS REPORTED.    */
/*     If THIS entry is catalogued (eg: Catalog entry is &SYSR2 and  */
/*     this duplicate is found on the second volume in the SYSRES-set*/
/*     then the VSYSRES table entry which was earlier added is       */
/*     REPLACEd with this one. THEREFORE the VSYSRES table is KEYed. */
/*     The net result is a Warning and the VYSRES table is populated */
/*     only with the catalogued dataset if indeed there is a catalog */
/*     entry (and there is only ever one entry in the VSYSRES table).*/
/*                                                                   */
/* (3) Datasets which appear to have moved volumes                   */
/*     Later when the MCATALOG and VSYSRES tables are being compared */
/*     if the Volsers dont match then the dataset is considered to   */
/*     have MOVED and an appropriate message is written.             */
/*     !!!!!! The User is expected to sort this out MANUALLY !!!!!!! */
/*                                                                   */
/* (4) A line was added (see Note(4) Reference below so that existing*/
/*     catalog entries which specify VOLSER of &SYSR1 are treated    */
/*     as if they say ******. A simple appoach to this support       */
/*     results in a one line change, an effect being that a message  */
/*     may specify ****** in a reported catalog entry when the       */
/*     catalog entry is actually &SYSR1.  Finally, of course, this   */
/*     program always SETS volser of ****** and not &SYSR1.          */
/*     ***** BUT NOW SEE NOTE (7) BELOW ***************************  */
/*                                                                   */
/* (5) Changed to support HLQ= (SUMIT V04.08). This means removing   */
/*     the restriction of processing only SYS1/ISPF/RTAUTH datasets. */
/*     Now all High level qualifiers are considered.                 */
/*                                                                   */
/* (6) Changed to support 8 Volumes in a sysres-set. (SUMIT V04.30). */
/*     In fact no change was required other than a comment above.    */
/*                                                                   */
/* (7) V05.38. Prior to this change if the user (inadvertently)      */
/*     reduces VlNum from(say) 3 to 2 then, at Equalise, all Catalog */
/*     entries for the 3rd volume would be deleted. So, this change  */
/*     checks (for Vol_Index > VlNum) and issues Warning message if  */
/*     found (and does not generate the DEL command). The JCL step   */
/*     will finish with RC4 and the user should investigate.         */
/*     In order that the numeric comparison will always work the line*/
/*     of code referred to in point (4) above, was reversed so that  */
/*     ****** is stored internally as &SYSR1 and so any new SYSRES   */
/*     catalog entries are set to &SYSR1.                            */
/*                                                                   */
/* (8) V05.48. New support and fix Bug as follows:                   */
/*     New Support: If calling JCL has a CATALOG DD card then        */
/*                  append the associated catalog name to the        */
/*                  generated commands in routine Do_Commands (only).*/
/*                  This is for NEW SYSTEM BUILD (not for Sumit)     */
/*                                                                   */
/*     Fix Bug: Datasets SYS1.PARMLIB/CSSLIB/LINKLIB cannot be       */
/*              catalogued with a symbol (eg: &SYSR1). Therefore     */
/*              for these datasets this is changed to ******.        */
/*              ** See also bullet 12 below for a further adjustment**/
/*                                                                   */
/* (9) V05.64. Add checking for directly cataloged datasets.         */
/*     A WARNING(E) message (so WARNING but with RC8) is issued if   */
/*     a catalog entry is found (in code Build_Catalog) which contain*/
/*     an explicit reference to one of the target volumes.           */
/*     If the target volumes are the alternate set then the check    */
/*     includes the current sysres-set volumes (since these can be   */
/*     derived form the SYSRn system symbols).                       */
/*     Processing continues as normal, so no catalog entry is        */
/*     recorded for the dataset and therefore, if the function is    */
/*     CAT, we likely Generate a statement to create one (which will */
/*     subsequently fail).                                           */
/*     **The User is instructed to correct this problem manually **  */
/*     ** If the user is (wisely) running JCL with COND=(4,LT) then  */
/*     ** batch processing will stop at this step and he may then    */
/*     ** correct the situation before rerunning (from the preceding */
/*     ** step).                                                     */
/*                                                                   */
/* (10)V05.75. Distinguish between the number of commands and        */
/*     number of lines written to the ACTION and BACKOUT DDnames.    */
/*     For each moved dataset we write 3 lines but only 2 commands.  */
/*                                                                   */
/* (11)V05.76. Allow an additional parameter to indicate that a      */
/*     direct catalog entry (see V05.64 notes above) should result   */
/*     in the same processing as an incorrect indirect one. IE:      */
/*     The code will generate ACTION and BACKOUT cards consisting    */
/*     of DELETE NSCR and then DEFINE NONVSAM commands.              */
/*                                                                   */
/*     === This additional parameter must take Value DELDIRECT ===   */
/*                                                                   */
/*     NB:This parameter is only valid with the CAT (and not DEL) fn */
/*     NB:Commands are only generated where the dataset exists on    */
/*        the sysres set being processed, hence the catalog entry    */
/*        for that dataset is corrected (changed, direct to indirect)*/
/*                                                                   */
/*     Strictly these generated commands could be included in the    */
/*     commands to be executed NOW (and not just before IPL as is the*/
/*     case for datasets that have 'moved' sysres volume); however   */
/*     there is a change control issue particularly if the dataset   */
/*     is catalogued on the alternate sysres so better to defer      */
/*     the recataloguing by using ACTION/BACKOUT.                    */
/*     Note: IN FACT SUMIT DOES NOT MAKE USE OF THIS OPTION ***      */
/*           IT WAS DEVELOPED TO SUPPORT WHOLESALE CONVERSION OF     */
/*           DIRECT CATALOG ENTRIES, AS FOUND ON SYSTEMS THUS FAR    */
/*           SUPPORTED USING RSSS (R3S)                              */
/* (12)V05.97. Dataset SYS1.IBM.PARMLIB catalogued with ******.      */
/*             (See also V05.48 above).                              */
/*                                                                   */
/* (13)V06.00. Support for any Alias(es) of sysres-resident datasets */
/*     If a dataset is moved from one sysres volume to another.      */
/*     Typically this happens when a further M9 is added to the      */
/*     sysres set, products then, by default, move to this new volume*/
/*     The ACTION/BACKOUT DDnames are created and hold DEL/DEF cmds  */
/*     to be executed at cutover, however the DEL removes any Aliases*/
/*     that might exist for any affected datasets. This enhancement  */
/*     looks for such Aliases and generates commands to recreate them*/
/*     These commands are included in the ACTION/BACKOUT command     */
/*     stream immediately after the DEFINE of the underlying dataset.*/
/*                                                                   */
/* (14)V06.03. Support easier emergency backout from another system. */
/*     The commands written to the ACTION and BACKOUT DDnames now    */
/*     include a CATALOG parameter referring to this system's own    */
/*     master catalog (found by control block snooping.) This makes  */
/*     no difference in normal use, but means the commands can be    */
/*     run without modification on another system which has access   */
/*     to the catalog. For even greater convenience an IMPORT        */
/*     CONNECT and an EXPORT DISCONNECT command are written as       */
/*     comments at the start and end of the BACKOUT command stream.  */
/*-------------------------------------------------------------------*/
/*-------------------------------------------------------------------*/
Parse Upper Arg Option VlNum Volumes             /* Parms are Global */
 
Address ISPEXEC
/*----------- Remove Leading and Trailing blanks in Parms -----------*/
Option = Strip(Option)
 
/*---------------  Initialise any Variables -------------------------*/
Max_Rc = 0           /*--- Return Code of this Function -------------*/
MVolser. = ""        /*--- Duplicate Checking: Symbolic volser of....*/
Done. = 0            /*--- catalog entry and boolean to indicate    -*/
                     /*--- we have already seen dataset on a volume -*/
Action_Cmds  = 0     /*--- Number of Commands write to Action File --*/
Action_Lines = 0     /*--- Number of Lines to write to Action File --*/
Action.=""           /*--- Array of Lines for above    --------------*/
Action_DD = 0        /*--- Default: No ACTION DD in calling JCL -----*/
 
Backout_Cmds  = 0    /*--- Same as Action but backout Commands ------*/
Backout_Lines = 0    /*--- Same as Action but backout Lines    ------*/
Backout.=""          /*---        "                 "          ------*/
Backout_DD = 0       /*---        "                 "          ------*/
CatCont=""           /*--- V05.48 Used to Continue command     ------*/
DelDirect = 0        /*--- V05.76 Indicates extra parm passed  ------*/
InAlias  = 0         /*--- V06.00 Boolean                           -*/
Alias_List. = ""     /*--- V06.00 Aliases relating to a given d/s   -*/
Alias_ListNum. = 0   /*--- V06.00 Number of such aliases by d/s     -*/
IPLLibs = "SYS1.LINKLIB SYS1.CSSLIB SYS1.PARMLIB"  /* V05.48   ------*/
IPLLibs = IPLLibs "SYS1.IBM.PARMLIB"               /* V05.97   ------*/
 
/*--V06.03 Snoop through control blocks to find the name and --------*/
/*-- volume of the current master catalog                    --------*/
CVT      = C2D(Storage(10,4))                            /*- V06.03 -*/
ECVT     = C2D(Storage(D2X(CVT+X2D(8C)),4))              /*- V06.03 -*/
IHAIPA   = C2D(Storage(D2X(ECVT+X2D(188)),4))            /*- V06.03 -*/
IPA_Syscat_Image   = Strip(Storage(D2X(IHAIPA+224),63))  /*- V06.03 -*/
McatVol = Substr(IPA_Syscat_Image,1,6)                   /*- V06.03 -*/
McatDsn = Strip(Substr(IPA_Syscat_Image,11,44))          /*- V06.03 -*/
 
/*--V06.03 Build commented-out commands to CONNECT and       --------*/
/*-- DISCONNECT our master catalog on some other system.     --------*/
Connect.1 = " /*  IMPORT                               +    */"
Connect.2 = " /*     OBJECTS(('"McatDsn"'      +    */"
Connect.3 = " /*     VOLUME("McatVol")                    +    */"
Connect.4 = " /*     DEVT(3390))) CONNECT                   */"
DisConnect.1 = " /*  EXPORT                               +    */"
DisConnect.2 = " /*     '"McatDsn"'               +    */"
DisConnect.3 = " /*     DISCONNECT                             */"
 
/*------ Open Files to which commands which the User will have to ---*/
/*------ issue at cutover (because some datasets have moved volume) -*/
/*------ are written.                     ---------------------------*/
 
Action_DD  = OpenCheck("ACTION")
Backout_DD = OpenCheck("BACKOUT")
 
/*--V05.48 Pick up any Catalog name passed on DD CATALOG ------------*/
Catalog_Rc = ListDsi("CATALOG FILE")
If Catalog_Rc ^> 4 Then
  Do
    CatName = SysDsname
    CatCont = "-"
  End
 
/*---------------- First of all Validate Parms ----------------------*/
If (Option ^= "CAT") & (Option ^= "DEL") Then
  Do
    Say "*************************************************************"
    Say "* Invalid option parameter of: "||Option||" - Process Ended  "
    Say "*************************************************************"
    Max_Rc = Max(Max_Rc,12)
    Signal Main_Process_Exit
  End
 
If ^Datatype(VlNum,"N") Then
  Do
    Say "SYSCATLG: Number of Volumes must be Numeric, if called",
        "from O.13/O.14-generated JCL contact dialog developers"
    Max_Rc = Max(Max_Rc,12)
    Signal Main_Process_Exit
  End
 
/*-- Check the Number of Volsers passed to the program  -------------*/
/*-- V05.76 Look for additional parameter at end of Volumes String --*/
/*--        (Only Valid for CAT Function)                          --*/
NumVolumes = Words(Volumes)
LastVol    = Word(Volumes,NumVolumes)
 
Select
  When NumVolumes = VlNum & LastVol ^= "DELDIRECT" Then Nop /* Norm -*/
  When NumVolumes = (VlNum + 1) & LastVol = "DELDIRECT",
       & Option = "CAT" Then
    Do
      DelDirect  = 1               /*-- Boolean Indicator -----------*/
      NumVolumes = NumVolumes - 1  /*-- Last word not a Volume ------*/
    End
  Otherwise
    Do
      Say "SYSCATLG:" VlNum "does not match Volsers passed, if",
          "called from SUMIT-generated JCL contact dialog developer"
      Max_Rc = Max(Max_Rc,12)
      Signal Main_Process_Exit
    End
End
 
 
/*---------- Create ISPF Tables for Master Catalog and VTOC Data ----*/
"TBCREATE MCATALOG NAMES(MDSET MVOLSER) NOWRITE"
"TBCREATE VSYSRES  KEYS(VDSET) NAMES(VVOLSER VSYMSER) NOWRITE"
 
/*---- V05.64 Create AllVols String for checking in Build_Catalog ---*/
Allvols = Volumes   /*-- Initialise string of Volumes to check ------*/
Sysres = MVSVAR("SYMDEF","SYSR1")
Vol1 = Word(Volumes,1)
If Sysres ^= Vol1 Then
  /* -- Target-Vols=Alternate => also check current Vols cos we can -*/
  Do Vol_Index = 1 to VlNum
    Sym_Sysres = "SYSR"||Vol_Index    /*-- NB: Omit the Ampersand ---*/
    Sysvol = MVSVAR("SYMDEF",Sym_Sysres)
    Allvols = Allvols Sysvol
  End
 
/*------------- Read Master Catalog into ISPF Table -----------------*/
 
Call Build_Catalog
 
Do Vol_Index = 1 to VlNum
 
  Volume = Word(Volumes,Vol_Index)
 
  /*---- Now Convert Volume VOLSER to associated Catalog symbol ----*/
  /*---- V05.38 Sysres held internally as &SYSR1 and not ****** ----
  If Vol_Index = 1 Then Sym_Volser = "******"
    Else Sym_Volser = "&SYSR"||Vol_Index     --  EG: &SYSR2 --------*/
  Sym_Volser = "&SYSR"||Vol_Index
  Call Build_Vtoc Volume Sym_Volser
 
End
 
/*------------- Process the Option Requested-------------------------*/
/*--------------Generate Catalog Commands         -------------------*/
Call Generate
 
/*------------- Write Commands and Messages out to files ------------*/
Call Do_Commands
 
If Action_Lines ^= 0 Then
  Do
    Address TSO,
      "EXECIO" Action_Lines "DISKW ACTION (STEM ACTION. FINIS)"
 
    If Backout_Lines ^= 0 Then
      Do
        /*---- V06.03 Include the IMPORT and EXPORT commands ----*/
        Address TSO,
          "EXECIO" 4 "DISKW BACKOUT (STEM CONNECT.)"
        Address TSO,
          "EXECIO" Backout_Lines "DISKW BACKOUT (STEM BACKOUT.)"
        Address TSO,
          "EXECIO" 3 "DISKW BACKOUT (STEM DISCONNECT. FINIS)"
      End
 
    Say " * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *"
    Say "Some Datasets Have Moved Volumes (as indicated above)...."
    Say Action_Cmds "commands have been written to the ACTION DDname"
    Say Backout_Cmds "commands have been written to the BACKOUT DDname"
    /*---- V06.03 Mention the IMPORT and EXPORT commands ------------*/
    Say "For use in an emergency, the commands to IMPORT CONNECT this "
    Say "system's master catalog to another system and to subsequently"
    Say "EXPORT DISCONNECT it have been included as comments at the   "
    Say "start and end of the BACKOUT command stream.                 "
  End
 
/*------------------ Initialise some internal ISPF tables -----------*/
"CONTROL ERRORS RETURN"
"TBEND MCATALOG"
"TBEND VSYSRES"
"TBEND CMDS"
"CONTROL ERRORS CANCEL"
/*------------------ Set ISPF Return Code ---------------------------*/
Main_Process_Exit:
 
ZISPFRC = Max_Rc
"VPUT (ZISPFRC) SHARED"
 
Exit 0
 
/*-------------------------------------------------------------------*/
/*-------------------- INTERNAL PROCEDURES --------------------------*/
/*-------------------------------------------------------------------*/
 
/*-------------------------------------------------------------------*/
/*---------- Read Master Catalog Entries into ISPF Table ------------*/
/*-------------------------------------------------------------------*/
Build_Catalog:
 
/*----------------- First Read IDCAMS Input in ----------------------*/
Address TSO "EXECIO * DISKR IN1 (STEM Data. Finis)"
 
Counter = 1
Do While (Counter <= Data.0)
 Select
  When Substr(Data.Counter,2,7) = "NONVSAM" Then
    Do
      InAlias = 0  /*- - V06.00 - - - - - - - - - - - - - - - - - - -*/
      MDSET = Strip(Substr(Data.Counter,18,42))
      /*-- Following test Removed for V04.08 which allows HLQ= ------*/
      /*-- support and therefore any hlq on the PP volumes.    ------
      If (Substr(MDSET,1,3) = "SYS") | (Substr(MDSET,1,4) = "ISPF") | ,
         (Substr(MDSET,1,6) = "RTAUTH") then
        Do
        -------------------------------------------------------------*/
      /*-------------- Now find Volser for dataset --------------*/
      Do Until (Substr(Data.Counter,9,8) = "VOLSER--")
        Counter = Counter + 1
      End
 
      /*--------------- Obtain Volser of dataset ----------------*/
      MVOLSER = Strip(Substr(Data.Counter,27,6))
 
      /*-- Keep if catalog Entry indicates a SYSRES-set volume --*/
      Select
        When Substr(MDSET,1,11) = "SYS1.VTOCIX" Then Nop
        When (MVOLSER = "******") | (Left(MVOLSER,5) = "&SYSR") Then
         Do
           /*-- V05.38 Allow numeric comparison with VlNum later-*/
           If MVOLSER = "******" Then MVOLSER="&SYSR1"
           "TBADD MCATALOG"
           /*---- Save MVolser for Later Speedy Compare ---------*/
           MVolser.MDSET = MVOLSER
         End
      /*-- V05.64 Check for Direct Cat Entry and Issue Warning --*/
        When WordPos(MVOLSER,Allvols) ^= 0 Then
         Do
           Say "*WARNING(E)* Catalog Entry" MDSET "on" MVOLSER,
               "is DIRECT"
           /*-- V05.76: Remember Catalog Entry is User Requested */
           If DelDirect Then
             Do
               /*--  Remember Catalog Entry (same as above) -----*/
               "TBADD MCATALOG"
               MVolser.MDSET = MVOLSER
               Say "             Fixing DEL/DEF Commands written to",
                   "DDname ACTION"
             End
           Else
             Say "             This is invalid and must be corrected",
                 "MANUALLY"
           Max_Rc = Max(Max_Rc,8)
         End
        Otherwise Nop
      End
 
    End
  /*------ V06.00 Handle any Aliases which relate to Datasets -------*/
  /*------------- (Relevant if the underlying dataset will move -----*/
  /*-------------  volumes)   ---------------------------------------*/
 
  When Substr(Data.Counter,2,5) = "ALIAS" Then
    Do
      Alias = Strip(Substr(Data.Counter,18,42))
      InAlias = 1
    End
  /*- - - V06.00 Pick up Underlying dataset name for this Alias - - -*/
  When InAlias & Substr(Data.Counter,9,7) = "NONVSAM" Then
    Do
      ADSET = Strip(Substr(Data.Counter,18,42))
      Alias_List.ADSET = Alias_List.ADSET Alias
      Alias_ListNum.ADSET = Alias_ListNum.ADSET + 1
      InAlias = 0
    End
 
  Otherwise Nop
 
 End  /*- - -  of Select - - - - - - - - - - - - - - - - - - - - */
 
  Counter = Counter + 1
 
End /* While Loop */
 
/*-------------------- Now Sort Table Asscending --------------------*/
"TBSORT MCATALOG FIELDS(MDSET,C,A)"
 
Return 0
 
/*-------------------------------------------------------------------*/
/*---------- Read VTOC directly and load into ISPF Table ------------*/
/*-------------------------------------------------------------------*/
Build_Vtoc:
 
Arg VVOLSER VSYMSER
 
VDSET = ""
"LMDINIT LISTID(DATA1) VOLUME("VVOLSER")"
"LMDLIST LISTID("DATA1") DATASET(VDSET) STATS(NO) OPTION(LIST)"
DSRC = RC
 
/*--------------- Now Load ISPF Table with Data ---------------------*/
Do While DSRC < 4
  /*------ Following test changed for V04.08 which allows HLQ= ------*/
  /*------ support and therefore any hlq on the PP volumes.    ------
  If ((Substr(VDSET,1,3) = "SYS") | (Substr(VDSET,1,4) = "ISPF") | ,
     (Substr(VDSET,1,6) = "RTAUTH")) & ,
     (Substr(VDSET,1,11) ^= "SYS1.VTOCIX") then    ------------------*/
  If (Substr(VDSET,1,11) ^= "SYS1.VTOCIX") Then
     Do
       Select
         /*-- If not encountered on a volume then add to Table -----*/
         When ^Done.VDSET Then
           Do
             "TBADD VSYSRES"
             Done.VDSET = 1
           End
         /*-- Already Encountered: If THIS one is the correct  -----*/
         /*-- volume (by comparing to any CATALOG entry) then  -----*/
         /*-- replace the one thats already there.             -----*/
         Otherwise
           Do
             If VSYMSER = MVolser.VDSET Then
               Do
                 Save_VVolser = VVOLSER;Save_VSymser = VSYMSER
                 "TBTOP VSYSRES"
                 "TBGET VSYSRES"
                 Msg_Volser = VVOLSER  /*- Save Volser for Message -*/
                 VVOLSER = Save_VVolser;VSYMSER = Save_VSymser
                 "TBPUT VSYSRES"  /*--- And update the Entry -------*/
               End
             Else Msg_Volser = VVOLSER
 
             Say "*WARNING* Dataset "||VDSET||" on "||Msg_Volser,
                 "is a duplicate and is ignored"
             Max_Rc = Max(Max_Rc,4)
 
           End
       End
     End
  "LMDLIST LISTID("DATA1") DATASET(VDSET) STATS(NO) OPTION(LIST)"
  DSRC = RC
End
 
/*-------------------- Now Sort Table Asscending --------------------*/
"TBSORT VSYSRES FIELDS(VDSET,C,A)"
 
/*--------------------- Free LM Services and Exit -------------------*/
"LMDLIST LISTID("DATA1") OPTION(FREE)"
"LMDFREE LISTID("DATA1")"
 
Return 0
 
/*-------------------------------------------------------------------*/
/*---------- Generate Cataloging Commands for Execution -------------*/
/*-------------------------------------------------------------------*/
Generate:
 
/*-------------- Create ISPF Table for Datasets to Action -----------*/
"TBCREATE CMDS NAMES(DSET VOL) NOWRITE"
 
/*---------------- Go to top of Lists of Datasets -------------------*/
"TBTOP MCATALOG"
"TBTOP VSYSRES"
"TBSKIP MCATALOG"
RCMCAT = RC
"TBSKIP VSYSRES"
RCVTOC = RC
 
/*---------------- Start Main Processing Loop -----------------------*/
Do While (RCMCAT = 0) | (RCVTOC = 0)
 
  /*----------- If End of File reached set Max condition ------------*/
  If RCMCAT > 0 then MDSET = 'FFFFFFFF'X
  If RCVTOC > 0 then VDSET = 'FFFFFFFF'X
 
  /*--------------- Actually Carry out decision taking --------------*/
  If MDSET < VDSET then
    Do
      /*----------- Catalog Entry for Non-Existant Dataset ----------*/
 
      /*--------- If Option is DELETE then  Generate Command --------*/
      If (Option = "DEL") Then
        Do
          /*------ V05.38 Check Cat entry is for a valid volume -----*/
          Vol_Index = Right(MVOLSER,1)
          If Vol_Index > VlNum Then
            Do
              Say "NOTE: Cat_Entry" MDSET "on" MVOLSER "not deleted",
                  "since VlNum is" VlNum"."
              Max_Rc = Max(Max_Rc,4)
            End
          Else
            Do
              DSET = MDSET
              "TBADD CMDS"
            End
        End
 
      Else Say "*INFO   *"  MDSET "(with Volume entry" MVOLSER")",
        "needs to be Uncataloged"
 
      /*--------------- Get Next Record for Processing --------------*/
      "TBSKIP MCATALOG"
      RCMCAT = RC
 
    End /* MDSET < VDSET */
  Else
    If MDSET > VDSET then
      Do
        /*------------ Dataset to be Cataloged Somewhere ------------*/
 
        /*---------- Only Write Record if something to do -----------*/
        If Option = "CAT" Then
          Do
            DSET = VDSET
            VOL = VSYMSER
            /*-- V05.48: Certain Libraries Must Use ****** ----------*/
            Select
              When WordPos(DSET,IPLLibs) = 0 Then "TBADD CMDS"
              When VSYMSER ^= "&SYSR1" Then
                Do
                  Say "Dataset" DSET "is not on IPL Volume",
                      "cannot be Catalogued"
                  Max_Rc = Max(Max_Rc,4)
                End
              Otherwise
                Do
                  /*---V5.48 Reinstate ****** for IPL-Library -------*/
                  VOL = "******"
                  "TBADD CMDS"
                End
            End
          End
 
        /*-------------- Get Next Record for Processing -------------*/
        "TBSKIP VSYSRES"
        RCVTOC = RC
 
      End /* MDSET > VDSET */
    Else
      If MDSET = VDSET then
        Do
          /*--- Cataloged dataset so simply get next one          ---*/
          /*--- unless the volumes dont match (which means the    ---*/
          /*--- dataset has moved between two SYSRES-set volumes  ---*/
          /*--- OR (V05.76) is Directly Catalogued and user has   ---*/
          /*--- opted to not tolerate those)                      ---*/
          If MVOLSER ^= VSYMSER Then
            Do
             /*-- V05.76:  If Direct entry need a different msg.  ---*/
             If MVOLSER = VVOLSER Then
                 Say "*ACTION * Dataset" MDSET "is directly",
                     "catalogued on" MVOLSER
             Else
               Do
                 Say "*ACTION * Dataset" MDSET "changed volumes"
                 Say "*ACTION * ---Catalog Entry says" MVOLSER,
                 "but dataset is on" VVOLSER
               End
             /*- Create commands for User if we have an output File -*/
             If Action_DD Then
               Do
                 Action_Cmds  = Action_Cmds  + 2
                 Action_Lines = Action_Lines + 1
                 Action.Action_Lines = " DELETE '"MDSET"' NSCR +"
                 /*-- V06.03: Add master catalog name line -----*/
                 Action_Lines = Action_Lines + 1
                 Action.Action_Lines = "   CATALOG('"McatDsn"')"
                 Action_Lines = Action_Lines + 1
                 Action.Action_Lines = " DEFINE",
                  "NONVSAM(NAME('"VDSET"') +"
                 /*-- V05.76:Fix Bug: Honour LINKLIB/CSSLIB/PARMLIB
                      and from V05.97 SYS1.IBM.PARMLIB              -*/
                 If WordPos(VDSET,IPLLibs) = 0 Then
                        Action_Volser = VSYMSER
                 Else   Action_Volser = "******"
                 Action_Lines = Action_Lines + 1
                 Action.Action_Lines = "   DEVT(0000)",
                  "VOL("Action_Volser")) +"
                 /*-- V06.03: Add master catalog name line -----*/
                 Action_Lines = Action_Lines + 1
                 Action.Action_Lines = "   CATALOG('"McatDsn"')"
                 /*-- V06.00: Support for any Aliases --------------*/
                 If Alias_List.VDSET ^= "" Then
                   Do i = 1 to Alias_ListNum.VDSET
                     Alias = Word(Alias_List.VDSET,i)
                     Action_Cmds  = Action_Cmds  + 1
                     Action_Lines = Action_Lines + 1
                     Action.Action_Lines = " DEFINE",
                       "ALIAS(NAME('"Alias"') +"
                     Action_Lines = Action_Lines + 1
                     Action.Action_Lines = "   RELATE('"VDSET"') +"
                     /*-- V06.03: Add master catalog name line -----*/
                     Action_Lines = Action_Lines + 1
                     Action.Action_Lines = "   CATALOG('"McatDsn"')"
                   End
               End
 
             If Backout_DD Then
               Do
                 Backout_Cmds  = Backout_Cmds  + 2
                 Backout_Lines = Backout_Lines + 1
                 Backout.Backout_Lines = " DELETE '"MDSET"' NSCR +"
                 /*-- V06.03: Add master catalog name line ---------*/
                 Backout_Lines = Backout_Lines + 1
                 Backout.Backout_Lines = "   CATALOG('"McatDsn"')"
                 Backout_Lines = Backout_Lines + 1
                 Backout.Backout_Lines = " DEFINE",
                  "NONVSAM(NAME('"VDSET"') +"
                 Backout_Lines = Backout_Lines + 1
                 Backout.Backout_Lines = "   DEVT(0000)",
                  "VOL("MVOLSER")) +"
                 /*-- V06.03: Add master catalog name line ---------*/
                 Backout_Lines = Backout_Lines + 1
                 Backout.Backout_Lines = "   CATALOG('"McatDsn"')"
                 /*-- V06.00: Support for any Aliases --------------*/
                 If Alias_List.VDSET ^= "" Then
                   Do i = 1 to Alias_ListNum.VDSET
                     Alias = Word(Alias_List.VDSET,i)
                     Backout_Cmds  = Backout_Cmds  + 1
                     Backout_Lines = Backout_Lines + 1
                     Backout.Backout_Lines = " DEFINE",
                       "ALIAS(NAME('"Alias"') +"
                     Backout_Lines = Backout_Lines + 1
                     Backout.Backout_Lines = "   RELATE('"VDSET"') +"
                     /*-- V06.03: Add master catalog name line -----*/
                     Backout_Lines = Backout_Lines + 1
                     Backout.Backout_Lines = "   CATALOG('"McatDsn"')"
                   End
               End
 
             Max_Rc = Max(Max_Rc,4)
            End
 
          "TBSKIP MCATALOG"
          RCMCAT = RC
          "TBSKIP VSYSRES"
          RCVTOC = RC
        End /* MDSET = VDSET */
End /* While Loop */
 
Return 0
 
 
/*-------------------------------------------------------------------*/
/*---------- From ISPF Table Generate Commands or Messages ----------*/
/*-------------------------------------------------------------------*/
Do_Commands:
 
 
/*------- Prepare to write Commands Out - Go to top of Table --------*/
Counter = 2
Output. = ""
Output.1 = " "
"TBTOP CMDS"
"TBSKIP CMDS"
DSRC = RC
 
/*---------------- Main Processing Loop for Write -------------------*/
Do While DSRC < 8
 
  /*------------------- Catalog Directly on Sysres ------------------*/
  If OPTION = "CAT" then
    Do
      Output.Counter = "  DEF NVSAM(NAME('"||DSET||"') -"
      Counter = Counter + 1
      Output.Counter = "     DEVT(0000) VOL("Vol"))" CatCont
      Counter = Counter + 1
      /*--- V05.48 Add CATALOG parameter if necessary ---------------*/
      If CatCont ^= "" Then
        Do
          Output.Counter = "     CATALOG("CatName")"
          Counter = Counter + 1
        End
    End
 
  /*------------------- Catalog Directly on Sysres ------------------*/
  If OPTION = "DEL" then
    Do
      Output.Counter = "  DELETE '"||DSET||"' NOSCRATCH" CatCont
      Counter = Counter + 1
      /*--- V05.48 Add CATALOG parameter if necessary ---------------*/
      If CatCont ^= "" Then
        Do
          Output.Counter = "     CATALOG("CatName")"
          Counter = Counter + 1
        End
    End
 
  /*-------- Get Next record to Process - ie. Delete/Catalog --------*/
  "TBSKIP CMDS"
  DSRC = RC
 
End /* While Loop */
 
/*----------- Now write data to OUT2 DDNAME for JCL to Use ----------*/
Address TSO,
  "EXECIO" Counter-1 "DISKW OUT2 (STEM OUTPUT. FINIS)"
 
Return 0
 
 
 
OpenCheck:
Arg  OCddn .
IO_RC = ListDSI(OCddn" FILE")
IF  IO_RC < 16  |  sysreason > 2  then  do
         /*  sysreason = 1  => parsing error                    */
         /*  sysreason = 2  => DYNALLOC error, no DD statement  */
         /*  DD statement present for all other return codes    */
   Address TSO  "EXECIO 0 DISKW "OCddn" (OPEN"
   IO_Rc = Rc
   If  IO_Rc = 0  Then  return 1
end
say "File "OCddn" ListDSI rc = "IO_RC", reason = "Sysreason
Say "File "OCddn" cannot be opened, "OCddn| ,
       |" commands will not be generated."
return 0
